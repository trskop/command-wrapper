-- vim: filetype=dhall

let Prelude =
        ../../Prelude/package.dhall sha256:2086c6a2e7ce8ee371858036ab60d24d045969defadb4bc9d87639921ec2e028
      ? ../../Prelude/package.dhall

let step =
      λ(a : Type) →
      λ(elem : a) →
      λ(input : { head : Optional a, tail : List a }) →
        merge
          { None = { head = Some elem, tail = input.tail }
          , Some =
              λ(prev : a) → { head = Some elem, tail = [ prev ] # input.tail }
          }
          input.head

let headAndTail =
      λ(a : Type) →
      λ(list : List a) →
        Prelude.List.fold
          a
          list
          { head : Optional a, tail : List a }
          (step a)
          { head = None a, tail = [] : List a }

let test0 =
        assert
      :   headAndTail Natural ([] : List Natural)
        ≡ { head = None Natural, tail = [] : List Natural }

let test1 =
        assert
      : headAndTail Natural [ 0 ] ≡ { head = Some 0, tail = [] : List Natural }

let test2 =
      assert : headAndTail Natural [ 0, 1 ] ≡ { head = Some 0, tail = [ 1 ] }

in    headAndTail
    : ∀(a : Type) → ∀(list : List a) → { head : Optional a, tail : List a }
