-- vim: filetype=dhall

let GlobalOptions =
        ./Type sha256:7cbb3d15d2d57539fe0274c8c1223148bb7b34d0310e0c58d4ab7f49e7e0ca5f
      ? ./Type

let GlobalOptions/default =
        ./default sha256:fcc7c0bfd22e1c1cc54cfe6249340f56410e296a90da6720156af78b7b7365ca
      ? ./default

let Verbosity =
        ../../../CommandWrapper/Verbosity/Type sha256:f009a39a49b1ee65651e9510778e7d72ff96820f4702a955e8f47682d72995c6
      ? ../../../CommandWrapper/Verbosity/Type

let Verbosity/fold =
        ../../../CommandWrapper/Verbosity/fold sha256:4dac2c264a2531d569ad0e5f712a1cd2d17b51ecdc502cc72f19937bf4733b1e
      ? ../../../CommandWrapper/Verbosity/fold

let ColourOutput =
        ../../../CommandWrapper/ColourOutput/Type sha256:0ef91a3f044406ee80fc20f26127b448a0e98f46c46ec024457023d2aded8543
      ? ../../../CommandWrapper/ColourOutput/Type

let ColourOutput/toText =
        ../../../CommandWrapper/ColourOutput/toText sha256:51d22acdc9b32f757e9170ae7c2cf244ce0488aa839dada9ee38bb3f1ee4d7bf
      ? ../../../CommandWrapper/ColourOutput/toText

let optionalOptions =
        ../../utils/optionalOptions sha256:f9626a1ef8209d45703cc7ac05aee40c9e96f5ccc2c406cdbd68eafd6d3234f0
      ? ../../utils/optionalOptions

let optionalFlags =
        ../../utils/optionalFlags sha256:dbb96b960dad5036585e8d0de1d15204a281d519ac9f59b33697100d62b5798c
      ? ../../utils/optionalFlags

let noArguments = [] : List Text

let GlobalOptions/toArguments =
        λ(options : GlobalOptions)
      →   optionalOptions
            Verbosity
            (   λ(verbosity : Verbosity)
              → [     "--verbosity="
                  ++  Verbosity/fold
                        Text
                        { Silent = "silent"
                        , Normal = "normal"
                        , Verbose = "verbose"
                        , Annoying = "annoying"
                        }
                        verbosity
                ]
            )
            options.verbosity
        # optionalOptions
            ColourOutput
            (   λ(colour : ColourOutput)
              → [ "--colour=${ColourOutput/toText colour}" ]
            )
            options.colour
        # optionalFlags [ "--aliases" ] [ "--no-aliases" ] options.allowAliases
        # optionalOptions
            Text
            (λ(directory : Text) → [ "--change-directory=${directory}" ])
            options.changeDirectory

let -- Default value should not pass any options to underlying command.
    noArgumentsByDefault =
      assert : GlobalOptions/toArguments GlobalOptions/default ≡ noArguments

in  GlobalOptions/toArguments
