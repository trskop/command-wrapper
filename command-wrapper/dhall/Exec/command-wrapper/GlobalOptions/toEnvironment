-- vim: filetype=dhall

let GlobalOptions =
        ./Type sha256:7cbb3d15d2d57539fe0274c8c1223148bb7b34d0310e0c58d4ab7f49e7e0ca5f
      ? ./Type

let GlobalOptions/default =
        ./default sha256:fcc7c0bfd22e1c1cc54cfe6249340f56410e296a90da6720156af78b7b7365ca
      ? ./default

let emptyEnvironment =
        ../../../CommandWrapper/Environment/empty sha256:cd98ff0deea70057d59baf060c91fba887fc149198b7998ba6581a08c4793a6e
      ? ../../../CommandWrapper/Environment/empty

let optionalEnvironmentVariables =
        ../../utils/optionalEnvironmentVariables sha256:2565c61b55b84de6e75b663f3561c806bcebc193ff662c644150dc46ebe05c0b
      ? ../../utils/optionalEnvironmentVariables

let GlobalOptions/toEnvironment =
      λ(options : GlobalOptions) →
          optionalEnvironmentVariables
            Text
            ( λ(_ : Text) →
                [ { name = "COMMAND_WRAPPER_INVOKE_AS", value = _ } ]
            )
            options.invokeAs
        # optionalEnvironmentVariables
            Text
            (λ(_ : Text) → [ { name = "COMMAND_WRAPPER_PATH", value = _ } ])
            options.path
        # optionalEnvironmentVariables
            Text
            (λ(_ : Text) → [ { name = "COMMAND_WRAPPER_MANPATH", value = _ } ])
            options.manPath
        # optionalEnvironmentVariables
            Text
            (λ(_ : Text) → [ { name = "XDG_CONFIG_HOME", value = _ } ])
            options.configHome

let -- Default value should not pass any environment variables to underlying
    -- command.
    noArgumentsByDefault =
        assert
      : GlobalOptions/toEnvironment GlobalOptions/default ≡ emptyEnvironment

in  GlobalOptions/toEnvironment
