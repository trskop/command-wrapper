-- vim: filetype=dhall
--
-- ```
-- docker-compose GLOBAL_OPTIONS [ACTION] [ARGUMENTS]
-- ```

let ExecCommand =
      { Type =
            ../../CommandWrapper/ExecCommand/Type sha256:6ece797a2c269b469da41f12ec2d7206846cac65183ae8213cce1b6d59f2b02b
          ? ../../CommandWrapper/ExecCommand/Type
      , default =
            ../../CommandWrapper/ExecCommand/default sha256:c3a088ca2b090c91d5d630c4e01f4b4fbd0136f5bb1251f6828698e5180685b2
          ? ../../CommandWrapper/ExecCommand/default
      }

let ColourOutput =
        ../../CommandWrapper/ColourOutput/Type sha256:0ef91a3f044406ee80fc20f26127b448a0e98f46c46ec024457023d2aded8543
      ? ../../CommandWrapper/ColourOutput/Type

let Verbosity =
        ../../CommandWrapper/Verbosity/Type sha256:f009a39a49b1ee65651e9510778e7d72ff96820f4702a955e8f47682d72995c6
      ? ../../CommandWrapper/Verbosity/Type

let emptyArguments = [] : List Text

let DownOptions/toArguments =
        ./DownOptions/toArguments sha256:b617689d9b96bb63ebac9a915ab2f8bcfa3f270830602d6fc90f3834892b658c
      ? ./DownOptions/toArguments

let UpOptions/toArguments =
        ./UpOptions/toArguments sha256:97e6ac449b50162a0fc65959acb43792c85175065f24932585d110e4d8957ebe
      ? ./UpOptions/toArguments

let Action =
        ./Action/Type sha256:e88f3cc3042912a2d9a24b75f93865227edbf368a70f5a8bb10f137abc8063c2
      ? ./Action/Type

let GlobalOptions =
        ./GlobalOptions/Type sha256:53cba1247c3b9afd5a2a200a7ee7b819b7b7180a109fa8d46258dbc1ee496853
      ? ./GlobalOptions/Type

let GlobalOptions/toArguments =
        ./GlobalOptions/toArguments sha256:11704b75be6ea8b64350c345a8dab20ba40f2a2ba260f563d152a10d95073654
      ? ./GlobalOptions/toArguments

let optionalFold =
      https://prelude.dhall-lang.org/v17.0.0/Optional/fold sha256:c5b9d72f6f62bdaa0e196ac1c742cc175cd67a717b880fb8aec1333a5a4132cf

in  λ(options : GlobalOptions) →
    λ(action : Optional (ColourOutput → Action)) →
    λ(_ : Verbosity) →
    λ(colourOutput : ColourOutput) →
    λ(arguments : List Text) →
      ExecCommand::{
      , command = "docker-compose"
      , arguments =
            GlobalOptions/toArguments options
          # optionalFold
              (ColourOutput → Action)
              action
              (List Text)
              ( λ(mkAction : ColourOutput → Action) →
                  merge
                    { Down = DownOptions/toArguments
                    , Up = UpOptions/toArguments
                    }
                    (mkAction colourOutput)
              )
              emptyArguments
          # arguments
      }
