-- vim: filetype=dhall

let List/map =
      https://prelude.dhall-lang.org/v17.0.0/List/map sha256:dd845ffb4568d40327f2a817eb42d1c6138b929ca758d50bc33112ef3c885680

let LogLevel =
        ../LogLevel/Type sha256:653f22f10a9c744a6b718ddd98eb1c166d430edf82d5e201b971e798c52b5210
      ? ../LogLevel/Type

let LogLevel/toText =
        ../LogLevel/toText sha256:c10bd400246ab8b8819a817759416dfd26f53068a507bc8f3b11b6916a553803
      ? ../LogLevel/toText

let GlobalOptions =
      { Type =
            ./Type sha256:82c559b2efa14b05efa1644a6ac53852c45823fd1395f1aa223fd8f9aa549b5c
          ? ./Type
      , default =
            ./default sha256:9045715df45ae4d2438d75ea7c934cb3e113716be3e88c52b34a18dfadb8a1a2
          ? ./default
      }

let optionalOptions =
        ../../utils/optionalOptions sha256:51a1fbb37ceddab8f0ff0ef0fe2cd910af960bd447c6bcbc01b23426c0ee74f8
      ? ../../utils/optionalOptions

let toArguments =
      λ(options : GlobalOptions.Type) →
          List/map Text Text (λ(_ : Text) → "--file=${_}") options.files
        # optionalOptions
            Text
            (λ(_ : Text) → [ "--project-name=${_}" ])
            options.projectName
        # optionalOptions
            Text
            (λ(_ : Text) → [ "--project-directory=${_}" ])
            options.projectDirectory
        # optionalOptions
            Text
            (λ(_ : Text) → [ "--context=${_}" ])
            options.contextName
        # optionalOptions
            Text
            (λ(_ : Text) → [ "--env-file=${_}" ])
            options.environmentFile
        # (if options.noAnsi then [ "--no-ansi" ] else [] : List Text)
        # optionalOptions
            LogLevel
            (λ(_ : LogLevel) → [ "--log-level=${LogLevel/toText _}" ])
            options.logLevel

let test0 = assert : toArguments GlobalOptions::{=} ≡ ([] : List Text)

let test1 =
        assert
      :   toArguments
            GlobalOptions::{
            , files = [ "/some/docker-compose.yaml" ]
            , projectName = Some "project"
            , projectDirectory = Some "/path/to/project/directory"
            , contextName = Some "context"
            , environmentFile = Some "/path/to/file.env"
            , logLevel = Some LogLevel.Debug
            , noAnsi = True
            , environment =
              [ { name = "CONFIG", value = "{\"json\": \"value\"}" } ]
            , workingDirectory = Some "/path/to/working/directory"
            }
        ≡ [ "--file=/some/docker-compose.yaml"
          , "--project-name=project"
          , "--project-directory=/path/to/project/directory"
          , "--context=context"
          , "--env-file=/path/to/file.env"
          , "--no-ansi"
          , "--log-level=DEBUG"
          ]

in  toArguments : GlobalOptions.Type → List Text
