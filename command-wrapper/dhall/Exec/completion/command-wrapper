-- vim: filetype=dhall
--
-- Call command line completion with Command Wrapper style API.  Generated
-- command looks like:
--
-- ```
-- COMMAND --index=INDEX --shell=SHELL -- [PREFIX_ARGUMENT ...] [WORD ...]
-- ```

let ExecCommand =
      { Type =
            ../../CommandWrapper/ExecCommand/Type sha256:6ece797a2c269b469da41f12ec2d7206846cac65183ae8213cce1b6d59f2b02b
          ? ../../CommandWrapper/ExecCommand/Type
      , default =
            ../../CommandWrapper/ExecCommand/default sha256:c3a088ca2b090c91d5d630c4e01f4b4fbd0136f5bb1251f6828698e5180685b2
          ? ../../CommandWrapper/ExecCommand/default
      }

let Shell =
        ../../CommandWrapper/Shell/Type sha256:f61ef033bfb850ef4bf0c3d0d18c69d1b15b38cc9e3df4a1abea334b89ed5555
      ? ../../CommandWrapper/Shell/Type

let Shell/toText =
        ../../CommandWrapper/Shell/toText sha256:ac2b3762009ee945aac998034d4b44cb47fff0593df4547c9423dd62e54e92d4
      ? ../../CommandWrapper/Shell/toText

in  λ(command : Text) →
    λ(prefixArguments : List Text) →
    λ(shell : Shell) →
    λ(index : Natural) →
    λ(words : List Text) →
      ExecCommand::{
      , command
      , arguments =
          let adjustedIndex = index + List/length Text prefixArguments
          
          in    [ "--index=${Natural/show adjustedIndex}"
                , "--shell=${Shell/toText shell}"
                , "--"
                ]
              # prefixArguments
              # words
      }
