-- vim: filetype=dhall
--
-- Transform a command into:
--
-- ```
-- docker GLOBAL_OPTIONS exec EXEC_OPTIONS CONTAINER COMMAND
-- ```

let ExecCommand =
      { Type =
            ../../CommandWrapper/ExecCommand/Type sha256:6ece797a2c269b469da41f12ec2d7206846cac65183ae8213cce1b6d59f2b02b
          ? ../../CommandWrapper/ExecCommand/Type
      , default =
            ../../CommandWrapper/ExecCommand/default sha256:c3a088ca2b090c91d5d630c4e01f4b4fbd0136f5bb1251f6828698e5180685b2
          ? ../../CommandWrapper/ExecCommand/default
      }

let ColourOutput =
        ../../CommandWrapper/ColourOutput/Type sha256:0ef91a3f044406ee80fc20f26127b448a0e98f46c46ec024457023d2aded8543
      ? ../../CommandWrapper/ColourOutput/Type

let Verbosity =
        ../../CommandWrapper/Verbosity/Type sha256:f009a39a49b1ee65651e9510778e7d72ff96820f4702a955e8f47682d72995c6
      ? ../../CommandWrapper/Verbosity/Type

let Environment =
        ./Environment/Type sha256:bfc2cb080bb0cac5a42a81beb707437389fa9c6f8e54ae8dd7ce09c6566140ee
      ? ./Environment/Type

let GlobalOptions =
        ./GlobalOptions/Type sha256:88e6fa8fe07e5d00621b8c6de87f845d885fd4c2fc9be493cdd8a66ddfa7f524
      ? ./GlobalOptions/Type

let ExecOptions =
        ./ExecOptions/Type sha256:2db64f6364ae0f19c6950ce41c5407f1172ec2d2c9a011522d575aae2a5986b5
      ? ./ExecOptions/Type

let GlobalOptions/toArguments =
        ./GlobalOptions/toArguments sha256:fcbb4e1a71fe47521226f224f04c34a148da87867c3f39c7a75b3b83bc005a77
      ? ./GlobalOptions/toArguments

let ExecOptions/toArguments =
        ./ExecOptions/toArguments sha256:d3b35fd99f4a36bcdf97f4ea9a96992893d1d74a83f0ea08d741ebff1a572ff3
      ? ./ExecOptions/toArguments

let Environment/toArguments =
        ./Environment/toArguments sha256:d0426badaef8cd6535378bbd9b5caf073e2b7d794eae541a454ebcba4cb52531
      ? ./Environment/toArguments

in  λ(container : Text) →
    λ(globalOptions : GlobalOptions) →
    λ(execOptions : ExecOptions) →
    λ ( mkCommand
      : ∀(environment : Environment) →
        ∀(verbosity : Verbosity) →
        ∀(colourOutput : ColourOutput) →
        ∀(arguments : List Text) →
          ExecCommand.Type
      ) →
    λ(environment : Environment) →
    λ(verbosity : Verbosity) →
    λ(colourOutput : ColourOutput) →
    λ(arguments : List Text) →
      let command = mkCommand environment verbosity colourOutput arguments
      
      in  ExecCommand::{
          , command = "docker"
          , arguments =
                GlobalOptions/toArguments globalOptions
              # [ "exec" ]
              # ExecOptions/toArguments execOptions
              # [ container ]
              # Environment/toArguments command.environment
              # [ command.command ]
              # command.arguments
          }
