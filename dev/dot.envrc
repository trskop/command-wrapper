# shellcheck shell=bash
# vim: filetype=direnv

set -euo pipefail

if [[ "${IN_NIX_SHELL:-}" != 'pure' ]]; then
    self="$(readlink .envrc)"
    dev_dir="${self%/*}"

    export DIRENV_HOST_PATH="${DIRENV_HOST_PATH:-$PATH}"

    watch_file "${dev_dir}/shell.nix"
    use nix "${dev_dir}/shell.nix"

    export -n AR AS CC CONFIG_SHELL CXX HOST_PATH LD NIX_BINTOOLS \
        NIX_BINTOOLS_WRAPPER_x86_64_unknown_linux_gnu_TARGET_HOST \
        NIX_BUILD_CORES NIX_BUILD_TOP NIX_CC \
        NIX_CC_WRAPPER_x86_64_unknown_linux_gnu_TARGET_HOST \
        NIX_ENFORCE_NO_NATIVE NIX_HARDENING_ENABLE NIX_INDENT_MAKE NIX_LDFLAGS \
        NIX_STORE NM OBJCOPY OBJDUMP RANLIB READELF SIZE SOURCE_DATE_EPOCH \
        STRINGS STRIP TEMP TEMPDIR TMP TMPDIR \
        buildInputs builder configureFlags depsBuildBuild \
        depsBuildBuildPropagated depsBuildTarget depsBuildTargetPropagated \
        depsHostHost depsHostHostPropagated depsTargetTarget \
        depsTargetTargetPropagated doCheck doInstallCheck name \
        nativeBuildInputs nobuildPhase out outputs patches phases \
        propagatedBuildInputs propagatedNativeBuildInputs shell shellHook \
        stdenv strictDeps system

    watch_file "${dev_dir}/cw-dev.envrc"
    source "${dev_dir}/cw-dev.envrc"
    use cw_dev_setup "${dev_dir}"

    # [An Introduction to the Z Shell: Startup Files
    # ](http://zsh.sourceforge.net/Intro/intro_3.html)
    for file in "${dev_dir}/config/zsh"/*; do
        watch_file "${file}"
    done
    export ZDOTDIR="${dev_dir}/config/zsh"
fi
