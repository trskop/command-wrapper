-- vim: filetype=dhall

let ExecCommand =
        ../../CommandWrapper/ExecCommand/Type sha256:6ece797a2c269b469da41f12ec2d7206846cac65183ae8213cce1b6d59f2b02b
      ? ../../CommandWrapper/ExecCommand/Type

let ColourOutput =
        ../../CommandWrapper/ColourOutput/Type sha256:0ef91a3f044406ee80fc20f26127b448a0e98f46c46ec024457023d2aded8543
      ? ../../CommandWrapper/ColourOutput/Type

let Verbosity =
        ../../CommandWrapper/Verbosity/Type sha256:f009a39a49b1ee65651e9510778e7d72ff96820f4702a955e8f47682d72995c6
      ? ../../CommandWrapper/Verbosity/Type

let EnvironmentVariable =
        ../../CommandWrapper/EnvironmentVariable/Type sha256:b8c3c0c4ceb36ba4e6674df5de20ad1d97e120b93b9ce9914a41d0036770dcc4
      ? ../../CommandWrapper/EnvironmentVariable/Type

let Action =
      < View : {}
      | Cat : {}
      | Compose : {}
      | Composetyped : {}
      | Edit : {}
      | Print : {}
      >

let actionToOption
    : ∀(action : Action) → Text
    =   λ(action : Action)
      → merge
          { View = λ(_ : {}) → "--action=view"
          , Cat = λ(_ : {}) → "--action=cat"
          , Compose = λ(_ : {}) → "--action=compose"
          , Composetyped = λ(_ : {}) → "--action=composetyped"
          , Edit = λ(_ : {}) → "--action=edit"
          , Print = λ(_ : {}) → "--action=print"
          }
          action

in    λ(action : Action)
    → λ(environment : List EnvironmentVariable)
    → λ(verbosity : Verbosity)
    → λ(colourOutput : ColourOutput)
    → λ(arguments : List Text)
    →   { command = "run-mailcap"
        , arguments = [ actionToOption action ] # arguments
        , environment = environment
        , searchPath = True
        , workingDirectory = None Text
        }
      : ExecCommand
